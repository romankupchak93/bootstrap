{"version":3,"file":"md-sanitizer.js","sources":["../../src/util/md-sanitizer.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-beta2): util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst uriAttrs = new Set([\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href',\n]);\n\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;\n\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n *\n * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\n */\nconst DATA_URL_PATTERN =\n  /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[\\d+/a-z]+=*$/i;\n\nconst allowedAttribute = (attr, allowedAttributeList) => {\n  const attrName = attr.nodeName.toLowerCase();\n\n  if (allowedAttributeList.includes(attrName)) {\n    if (uriAttrs.has(attrName)) {\n      return Boolean(\n        attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN)\n      );\n    }\n\n    return true;\n  }\n\n  const regExp = allowedAttributeList.filter((attrRegex) => attrRegex instanceof RegExp);\n\n  // Check if a regular expression validates the attribute.\n  for (let i = 0, len = regExp.length; i < len; i++) {\n    if (regExp[i].test(attrName)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const DefaultWhitelist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  div: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: [],\n};\n\nexport function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml;\n  }\n\n  if (sanitizeFn && typeof sanitizeFn === 'function') {\n    return sanitizeFn(unsafeHtml);\n  }\n\n  const domParser = new window.DOMParser();\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n  const whitelistKeys = Object.keys(whiteList);\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));\n\n  for (let i = 0, len = elements.length; i < len; i++) {\n    const el = elements[i];\n    const elName = el.nodeName.toLowerCase();\n\n    if (whitelistKeys.indexOf(elName) === -1) {\n      el.parentNode.removeChild(el);\n\n      continue;\n    }\n\n    const attributeList = [].concat(...el.attributes);\n    const whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\n\n    attributeList.forEach((attr) => {\n      if (!allowedAttribute(attr, whitelistedAttributes)) {\n        el.removeAttribute(attr.nodeName);\n      }\n    });\n  }\n\n  return createdDocument.body.innerHTML;\n}\n"],"names":["uriAttrs","Set","ARIA_ATTRIBUTE_PATTERN","SAFE_URL_PATTERN","DATA_URL_PATTERN","allowedAttribute","attr","allowedAttributeList","attrName","nodeName","toLowerCase","includes","has","Boolean","nodeValue","match","regExp","filter","attrRegex","RegExp","i","len","length","test","DefaultWhitelist","a","area","b","br","col","code","div","em","hr","h1","h2","h3","h4","h5","h6","img","li","ol","p","pre","s","small","span","sub","sup","strong","u","ul","sanitizeHtml","unsafeHtml","whiteList","sanitizeFn","domParser","window","DOMParser","createdDocument","parseFromString","whitelistKeys","Object","keys","elements","concat","body","querySelectorAll","el","elName","indexOf","parentNode","removeChild","attributeList","attributes","whitelistedAttributes","forEach","removeAttribute","innerHTML"],"mappings":"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"}