{"version":3,"file":"ripple.js","sources":["../src/ripple.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap Ripple.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { MDCRipple } from '@material/ripple'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\nconst NAME = 'ripple'\nconst DATA_KEY = 'bs.ripple'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst CLASS_NAME_RIPPLE = 'mdc-ripple-surface'\n\n// const SELECTOR_NAV_LINK = '.nav-link'\n// const NOT_SELECTOR_NAV_LINK = `:not(${SELECTOR_NAV_LINK})`\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\nconst SELECTOR_COMPONENT_TAG_LINK = 'a.accordion-button, a.list-group-item'\nconst SELECTOR_COMPONENT_TAG_BUTTON = 'button.accordion-button, button.list-group-item'\nconst SELECTOR_COMPONENT = `.btn, ${SELECTOR_COMPONENT_TAG_LINK}, ${SELECTOR_COMPONENT_TAG_BUTTON}`\nconst SELECTOR_COMPONENT_UNBOUNDED = '.btn-close, .btn-icon, .navbar-toggler'\nconst SELECTOR_COMPONENTS = `${SELECTOR_COMPONENT}, ${SELECTOR_COMPONENT_UNBOUNDED}, ${SELECTOR_DROPDOWN_TOGGLE}`\n\nconst Default = {\n  setActive: false,\n  setUnbounded: false\n}\n\nconst DefaultType = {\n  setActive: '(boolean|string)',\n  setUnbounded: '(boolean|string)'\n}\n\nclass Ripple extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n    this._ripple = null\n    this._element = element\n    this._init()\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  _init() {\n    if (!this._element || this._element.tagName.toLowerCase() === 'input') {\n      return\n    }\n\n    this._activate(this._element)\n  }\n\n  dispose() {\n    if (this._ripple) {\n      this._ripple.destroy()\n      this._ripple = null\n    }\n\n    super.dispose()\n  }\n\n  _checkInstance(element) {\n    const instance = Ripple.getInstance(element)\n    if (instance) {\n      instance.dispose()\n    }\n  }\n\n  _activate(element) {\n    this._checkInstance(element)\n    this._createElement(element)\n  }\n\n  _createElement(element) {\n    const rippleContainer = document.createElement('div')\n    rippleContainer.classList.add(CLASS_NAME_RIPPLE)\n    element.append(rippleContainer)\n    this._setRipple(element, rippleContainer)\n  }\n\n  _setRipple(element, rippleContainer) {\n    this._ripple = new MDCRipple(rippleContainer)\n    this._isUnbounded(element)\n  }\n\n  _isUnbounded(element) {\n    const isUnbound = element.matches(SELECTOR_COMPONENT_UNBOUNDED)\n    if (isUnbound) {\n      this._ripple.unbounded = true\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Ripple.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const rippleSurfaces = SelectorEngine.find(SELECTOR_COMPONENTS)\n  for (const surface of rippleSurfaces) {\n    Ripple.getOrCreateInstance(surface)\n  }\n})\n\ndefineJQueryPlugin(Ripple)\nexport default Ripple\n\n// import { MDCRipple } from '@material/ripple'\n// import BaseComponent from './base-component.js'\n// import EventHandler from './dom/event-handler.js'\n// import SelectorEngine from './dom/selector-engine.js'\n// import { defineJQueryPlugin } from './util/index.js'\n//\n// const NAME = 'ripple'\n// const DATA_KEY = 'bs.ripple'\n// const EVENT_KEY = `.${DATA_KEY}`\n// const DATA_API_KEY = '.data-api'\n// const EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n// const CLASS_NAME_RIPPLE = 'mdc-ripple-surface'\n//\n// const SELECTOR_COMPONENT_TAG_LINK = 'a.accordion-button, a.list-group-item'\n// const SELECTOR_COMPONENT_TAG_BUTTON = 'button.accordion-button, button.list-group-item'\n// const SELECTOR_COMPONENT = `.btn, .dropdown-toggle, ${SELECTOR_COMPONENT_TAG_LINK}, ${SELECTOR_COMPONENT_TAG_BUTTON}`\n// const SELECTOR_COMPONENT_UNBOUNDED = '.btn-close, .btn-icon, .navbar-toggler'\n// const SELECTOR_COMPONENTS = `${SELECTOR_COMPONENT}, ${SELECTOR_COMPONENT_UNBOUNDED}`\n//\n// const Default = {\n//   setActive: false,\n//   setUnbounded: false\n// }\n//\n// const DefaultType = {\n//   setActive: '(boolean|string)',\n//   setUnbounded: '(boolean|string)'\n// }\n//\n// class Ripple extends BaseComponent {\n//   constructor(element, config) {\n//     super(element, config)\n//     this._ripple = null\n//     this._element = element\n//     this._init()\n//   }\n//\n//   static get Default() {\n//     return Default\n//   }\n//\n//   static get DefaultType() {\n//     return DefaultType\n//   }\n//\n//   static get NAME() {\n//     return NAME\n//   }\n//\n//   _init() {\n//     if (!this._element || this._element.tagName.toLowerCase() === 'input') {\n//       return\n//     }\n//\n//     this._activate(this._element)\n//   }\n//\n//   dispose() {\n//     if (this._ripple) {\n//       this._ripple.destroy()\n//       this._ripple = null\n//     }\n//\n//     super.dispose()\n//   }\n//\n//   _checkInstance(element) {\n//     const instance = Ripple.getInstance(element)\n//     if (instance) {\n//       instance.dispose()\n//     }\n//   }\n//\n//   _activate(element) {\n//     this._checkInstance(element)\n//     this._createElement(element)\n//   }\n//\n//   _createElement(element) {\n//     const rippleContainer = document.createElement('div')\n//     rippleContainer.classList.add(CLASS_NAME_RIPPLE)\n//     element.append(rippleContainer)\n//     this._setRipple(element, rippleContainer)\n//   }\n//\n//   _setRipple(element, rippleContainer) {\n//     this._ripple = new MDCRipple(rippleContainer)\n//     this._isUnbounded(element)\n//   }\n//\n//   _isUnbounded(element) {\n//     const isUnbound = element.matches(SELECTOR_COMPONENT_UNBOUNDED)\n//     if (isUnbound) {\n//       this._ripple.unbounded = true\n//     }\n//   }\n//\n//   static jQueryInterface(config) {\n//     return this.each(function () {\n//       const data = Ripple.getOrCreateInstance(this, config)\n//\n//       if (typeof config === 'string') {\n//         if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n//           throw new TypeError(`No method named \"${config}\"`)\n//         }\n//\n//         data[config]()\n//       }\n//     })\n//   }\n// }\n//\n// EventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n//   const rippleSurfaces = SelectorEngine.find(SELECTOR_COMPONENTS)\n//   for (const surface of rippleSurfaces) {\n//     Ripple.getOrCreateInstance(surface)\n//   }\n// })\n//\n// defineJQueryPlugin(Ripple)\n// export default Ripple\n\n// import { MDCRipple } from '@material/ripple'\n// import BaseComponent from './base-component.js'\n// import EventHandler from './dom/event-handler.js'\n// import SelectorEngine from './dom/selector-engine.js'\n// import { defineJQueryPlugin } from './util/index.js'\n//\n// const NAME = 'ripple'\n// const DATA_KEY = 'bs.ripple'\n// const EVENT_KEY = `.${DATA_KEY}`\n// const DATA_API_KEY = '.data-api'\n// const EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n// const CLASS_NAME_RIPPLE = 'mdc-ripple-surface'\n// const SELECTOR_COMPONENT = '.btn'\n// const SELECTOR_COMPONENT_UNBOUNDED = '.btn-close, .btn-icon, .navbar-toggler'\n// const SELECTOR_COMPONENT_TAG_LINK = 'a.accordion-button, a.list-group-item, a.dropdown-item'\n// const SELECTOR_COMPONENT_TAG_BUTTON = 'button.accordion-button, button.list-group-item, button.dropdown-item'\n// const SELECTOR_DROPDOWN_TOGGLE = '[data-bs-toggle=\"dropdown\"]'\n// const SELECTOR_COMPONENTS = `${SELECTOR_COMPONENT}, ${SELECTOR_DROPDOWN_TOGGLE}, ${SELECTOR_COMPONENT_TAG_LINK}, ${SELECTOR_COMPONENT_TAG_BUTTON}, ${SELECTOR_COMPONENT_UNBOUNDED}`\n//\n// const Default = {\n//   setActive: false,\n//   setUnbounded: false\n// }\n//\n// const DefaultType = {\n//   setActive: '(boolean|string)',\n//   setUnbounded: '(boolean|string)'\n// }\n//\n// /**\n//  * Class definition\n//  */\n// class Ripple extends BaseComponent {\n//   constructor(element, config) {\n//     super(element, config)\n//\n//     // this._config = this._getConfig(config)\n//     this._ripple = null\n//     this._element = element\n//     this._init()\n//   }\n//\n//   // Getters\n//   static get Default() {\n//     return Default\n//   }\n//\n//   static get DefaultType() {\n//     return DefaultType\n//   }\n//\n//   static get NAME() {\n//     return NAME\n//   }\n//\n//   _init() {\n//     if (!this._element || this._element.tagName.toLowerCase() === 'input') {\n//       return\n//     }\n//\n//     this._activate(this._element)\n//   }\n//\n//   dispose() {\n//     if (this._ripple) {\n//       this._ripple.destroy()\n//       this._ripple = null\n//     }\n//\n//     super.dispose()\n//   }\n//\n//   _checkInstance(element) {\n//     const instance = Ripple.getInstance(element)\n//     if (this._config.setActive) {\n//       return\n//     }\n//\n//     if (instance) {\n//       return instance.dispose()\n//     }\n//   }\n//\n//   _activate(element) {\n//     if (!this._config.setActive) {\n//       this._config.setActive = true\n//       this._checkInstance(element)\n//       this._createElement(element)\n//       // return\n//     }\n//     // this._checkInstance(element)\n//     // this._createElement(element)\n//   }\n//\n//   _createElement(element) {\n//     const rippleContainer = document.createElement('div')\n//     rippleContainer.classList.add(CLASS_NAME_RIPPLE)\n//     element.append(rippleContainer)\n//     this._setRipple(element, rippleContainer)\n//   }\n//\n//   _setRipple(element, rippleContainer) {\n//     this._ripple = new MDCRipple(rippleContainer)\n//     this._isUnbounded(element)\n//   }\n//\n//   _isUnbounded(element) {\n//     this._config.setUnbounded = true\n//     const isUnbound = element.matches(SELECTOR_COMPONENT_UNBOUNDED)\n//     if (isUnbound) {\n//       this._ripple.unbounded = true\n//     }\n//   }\n//\n//   // Static\n//   static jQueryInterface(config) {\n//     return this.each(function () {\n//       const data = Ripple.getOrCreateInstance(this, config)\n//\n//       if (typeof config === 'string') {\n//         if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n//           throw new TypeError(`No method named \"${config}\"`)\n//         }\n//\n//         data[config]()\n//       }\n//     })\n//   }\n// }\n//\n// /**\n//  * Data API implementation\n//  */\n// EventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n//   const rippleSurfaces = SelectorEngine.find(SELECTOR_COMPONENTS)\n//   for (const surface of rippleSurfaces) {\n//     Ripple.getOrCreateInstance(surface)\n//   }\n// })\n//\n// /**\n//  * jQuery\n//  */\n// defineJQueryPlugin(Ripple)\n// export default Ripple\n\n// _getConfig(config) {\n//   config = {\n//     ...Default,\n//     ...Manipulator.getDataAttributes(this._element),\n//     ...typeof config === 'object' ? config : {}\n//   }\n//   config = this._mergeConfigObj(config)\n//   config = this._configAfterMerge(config)\n//\n//   this._typeCheckConfig(config)\n//\n//   return config\n// }\n"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","EVENT_LOAD_DATA_API","CLASS_NAME_RIPPLE","SELECTOR_DROPDOWN_TOGGLE","SELECTOR_COMPONENT_TAG_LINK","SELECTOR_COMPONENT_TAG_BUTTON","SELECTOR_COMPONENT","SELECTOR_COMPONENT_UNBOUNDED","SELECTOR_COMPONENTS","Default","setActive","setUnbounded","DefaultType","Ripple","BaseComponent","constructor","element","config","_ripple","_element","_init","tagName","toLowerCase","_activate","dispose","destroy","_checkInstance","instance","getInstance","_createElement","rippleContainer","document","createElement","classList","add","append","_setRipple","MDCRipple","_isUnbounded","isUnbound","matches","unbounded","jQueryInterface","each","data","getOrCreateInstance","undefined","startsWith","TypeError","EventHandler","on","window","rippleSurfaces","SelectorEngine","find","surface","defineJQueryPlugin"],"mappings":"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EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;;;;;;"}