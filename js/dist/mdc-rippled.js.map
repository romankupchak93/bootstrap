{"version":3,"file":"mdc-rippled.js","sources":["../src/mdc-rippled.js"],"sourcesContent":["import {MDCRipple} from '@material/ripple';\nimport {MDCRippleFoundation} from '@material/ripple/foundation';\nimport {onDOMContentLoaded} from './util/index';\n\nclass MDCRippled extends MDCRipple {\n  constructor(element) {\n    super(element, new MDCRippleFoundation({adapter: {}}));\n  }\n}\n\nonDOMContentLoaded(() => {\n  const classText = ['btn']\n  const btnIconClassList = ['btn-close', 'btn-icon', 'btn-edit', 'btn-clipboard', 'navbar-toggler']\n  const dropClassList = ['dropdown-toggle']\n\n  const dropSelectors = dropClassList.map(dropClass => {\n    return `:not(.${dropClass}), :not(.${dropClass}), :not(div[class*=\"${classText}-\"])`\n  })\n\n  const primarySelector = document.querySelectorAll(`[class*=\"${classText}\"]${dropSelectors.join('')}`)\n  const dropClassListElements = document.querySelectorAll(`.${dropClassList.join('.')}`)\n\n  for (const elementSelector of primarySelector) {\n    if ((elementSelector.classList.contains(classText) || btnIconClassList.some(cls => elementSelector.classList.contains(cls))) && !dropClassList.some(cls => elementSelector.classList.contains(cls))) {\n      elementSelector.classList.add('mdc-ripple-surface')\n      MDCRipple.attachTo(elementSelector);\n    }\n  }\n  for (const dropElement of dropClassListElements) {\n    if (dropElement.classList.contains(classText) && dropClassList.some(cls => dropElement.classList.contains(cls))) {\n      const childElementDrop = document.createElement('div')\n      childElementDrop.classList.add('mdc-ripple-surface')\n      dropElement.append(childElementDrop)\n    }\n  }\n  for (const btnWithIconMDC of btnIconClassList) {\n    const elBtnIconMDC = document.querySelectorAll(`.${btnWithIconMDC}`)\n    for (const btnIconMDC of elBtnIconMDC) {\n      btnIconMDC.style.borderRadius = '50%'\n      MDCRipple.attachTo(btnIconMDC);\n      btnIconMDC.classList.add('mdc-ripple-surface')\n    }\n  }\n})\nexport default MDCRippled\n\n// const toggleBtns = document.querySelectorAll('.dropdown-toggle');\n// const iconBtns = document.querySelectorAll('.btn-icon, .btn-close, .btn-edit');\n// const iconBtnClasses = Array.from(iconBtns).map(btn => btn.classList);\n// const iconBtnSelectors = iconBtnClasses.map(clsList => `[class*=\"${clsList}\"]`).join(',');\n// const defButtons = document.querySelectorAll(`[class*=\"btn\"]:not(${iconBtnSelectors}):not(.dropdown-toggle)`);\n// const defButtonClasses = Array.from(defButtons).map(btn => btn.classList);\n//\n// for (const button of defButtons) {\n//   const classList = Array.from(button.classList);\n//   if (classList.some(cls => defButtonClasses.some(clsList => clsList.contains(cls))) && !Array.from(toggleBtns).some(cls => button.classList.contains(cls))) {\n//     button.classList.add('mdc-ripple-surface');\n//     MDCRipple.attachTo(button);\n//   }\n// }\n//\n// for (const dropdownBtn of toggleBtns) {\n//   const mdcEl = document.createElement('span')\n//   mdcEl.classList.add('mdc-ripple-surface')\n//   dropdownBtn.append(mdcEl)\n//   MDCRipple.attachTo(dropdownBtn);\n// }\n//\n// for (const iconBtn of iconBtns) {\n//   const mdcEl = document.createElement('span')\n//   mdcEl.classList.add('mdc-ripple-surface')\n//   iconBtn.append(mdcEl)\n//   MDCRipple.attachTo(iconBtn);\n// }\n"],"names":["MDCRippled","MDCRipple","constructor","element","MDCRippleFoundation","adapter","onDOMContentLoaded","classText","btnIconClassList","dropClassList","dropSelectors","map","dropClass","primarySelector","document","querySelectorAll","join","dropClassListElements","elementSelector","classList","contains","some","cls","add","attachTo","dropElement","childElementDrop","createElement","append","btnWithIconMDC","elBtnIconMDC","btnIconMDC","style","borderRadius"],"mappings":"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"}