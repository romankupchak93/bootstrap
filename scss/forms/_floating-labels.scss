.form-floating {
  position: relative;

  &:not(.form-control:disabled)::before {
    position: absolute;
    top: $input-border-width;
    left: $input-border-width;
    width: subtract(100%, add($input-height-inner-quarter, $input-height-inner-half));
    height: $form-floating-label-height;
    content: "";
    background-color: $input-bg;
    z-index: -1;
    @include border-radius($input-border-radius);
  }

  > .form-control,
  > .form-control-plaintext,
  > .form-select {
    height: $form-floating-height;
    line-height: $form-floating-line-height;
  }

  > label {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; // allow textareas
    padding: $form-floating-padding-y $form-floating-padding-x;
    overflow: hidden;
    text-align: start;
    text-overflow: ellipsis;
    white-space: nowrap;
    pointer-events: none;
    border: $input-border-width solid transparent; // Required for aligning label's text with the input as it affects inner box model
    transform-origin: 0 0;
    @include transition($form-floating-transition);
  }

  > .form-control,
  > .form-control-plaintext {
    padding: $form-floating-padding-y $form-floating-padding-x;

    &::placeholder {
      color: transparent;
    }

    &:focus,
    &:not(:placeholder-shown) {
      padding-top: $form-floating-input-padding-t;
      padding-bottom: $form-floating-input-padding-b;
    }

    // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
    &:-webkit-autofill {
      padding-top: $form-floating-input-padding-t;
      padding-bottom: $form-floating-input-padding-b;
    }
  }

  > .form-select {
    padding-top: $form-floating-input-padding-t;
    padding-bottom: $form-floating-input-padding-b;
  }

  > .form-control:focus,
  > .form-control:not(:placeholder-shown),
  > .form-control-plaintext,
  > .form-select {
    ~ label {
      opacity: $form-floating-label-opacity;
      transform: $form-floating-label-transform;
    }
  }

  // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
  > .form-control:-webkit-autofill {
    ~ label {
      opacity: $form-floating-label-opacity;
      transform: $form-floating-label-transform;
    }
  }

  > .form-control-plaintext {
    ~ label {
      border-width: $input-border-width 0; // Required to properly position label text - as explained above
    }
  }

  > .form-control:disabled ~ label {
    color: $form-floating-label-disabled-color;
  }
}

//
//$label-height-sm: $font-size-sm * $line-height-sm;
//$label-top-position-sm: $label-height-sm * 0.6;
//$label-height-md: $font-size-base * $line-height-sm;
//$label-top-position-md: $label-height-md * 0.6;
//$label-height-lg: $font-size-lg * $line-height-sm;
//$label-top-position-lg: $label-height-lg * 0.6;
//
//@mixin label-common {
//  position: absolute;
//  z-index: 3;
//  max-width: calc(100% - #{$border-width * 2});
//  @include text-truncate();
//}
//
//[dir='rtl'] {
//  %label-inside-input-rtl {
//    right: 0;
//    left: auto !important;
//  }
//
//  %label-above-input-rtl {
//    right: $input-padding-x-sm;
//    left: auto !important;
//  }
//}
//
//@mixin label-inside-input() {
//  + label {
//    @include label-common();
//
//    top: $input-border-width;
//    //left: 0;
//
//    @include font-size($input-font-size);
//    padding: $input-padding-y $input-padding-x;
//
//    color: $input-placeholder-color;
//    pointer-events: none;
//
//    transition: all $transition-fast;
//
//    @extend %label-inside-input-rtl;
//  }
//
//  &.form-control-sm + label {
//    @include font-size($input-font-size-sm);
//    //padding: $input-padding-y-sm $input-padding-x-sm;
//  }
//  &.form-control-lg + label {
//    @include font-size($input-font-size-lg);
//    padding: $input-padding-y-lg $input-padding-x-lg;
//  }
//}
//
//$transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
//
//@mixin label-above-input {
//  + label {
//    @include label-common();
//    //left: $input-padding-x-sm;
//    //padding: 0;
//    line-height: $line-height-sm;
//    //background-color: var(--#{$prefix}body-bg);
//    border-radius: $border-radius;
//    @extend %label-above-input-rtl;
//  }
//
//  + label,
//  + label.label-sm {
//    top: -$label-top-position-sm;
//    font-size: $font-size-sm;
//  }
//  + label.label-md {
//    top: -$label-top-position-md;
//    font-size: $font-size-base;
//  }
//  + label.label-lg {
//    top: -$label-top-position-lg;
//    font-size: $font-size-lg;
//  }
//}


$label-height-sm: $font-size-sm * $line-height-sm;
$label-top-position-sm: $label-height-sm * 0.6;
$label-height-md: $font-size-base * $line-height-sm;
$label-top-position-md: $label-height-md * 0.6;
$label-height-lg: $font-size-lg * $line-height-sm;
$label-top-position-lg: $label-height-lg * 0.6;

@mixin label-common {
  position: absolute;
  z-index: 3;
  max-width: calc(100% - #{$border-width * 2});
  @include text-truncate();
}

[dir='rtl'] {
  %label-inside-input-rtl {
    right: 0;
    left: auto !important;
  }

  %label-above-input-rtl {
    right: $input-padding-x-sm;
    left: auto !important;
  }
}

@mixin label-inside-input() {
  + label {
    @include label-common();

    top: $input-border-width;
    //left: 0;//$input-border-width;

    @include font-size($input-font-size);
    //padding: $input-padding-y $input-padding-x;

    color: $input-placeholder-color;
    pointer-events: none;

    transition: all $transition-fast;

    @extend %label-inside-input-rtl;
  }

  &.form-control-sm + label {
    @include font-size($input-font-size-sm);
    //padding: $input-padding-y-sm $input-padding-x-sm;
  }
  &.form-control-lg + label {
    @include font-size($input-font-size-lg);
    //padding: $input-padding-y-lg $input-padding-x-lg;
  }
}

$transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);

@mixin label-above-input {
  + label {
    @include label-common();
    //left: $input-padding-x-sm;
    //left: 0;
    //padding: 0;
    line-height: $line-height-sm;
    background-color: transparent;
    //background-color: var(--#{$prefix}body-bg);
    border-radius: $border-radius;
    @extend %label-above-input-rtl;
  }

  + label,
  + label.label-sm {
    top: -$label-top-position-sm;
    font-size: $font-size-sm;
  }
  + label.label-md {
    top: -$label-top-position-md;
    font-size: $font-size-base;
  }
  + label.label-lg {
    top: -$label-top-position-lg;
    font-size: $font-size-lg;
  }
}

.floating-labels {
  position: relative;
  display: inline-flex;
  width: 100%;

  & select {
    border-radius: $border-radius-sm;
    @include label-above-input();
  }

  & input,
  & textarea {
    border-radius: $border-radius-sm;
    @include label-inside-input();
  }

  & input::placeholder,
  & textarea::placeholder {
    color: transparent;
    transition: color $transition-fast;
  }

  > .form-control,
  > .form-select {
    ~ label {
      display: flex;
      user-select: none;
      width: 100%;

      &::before {
        min-width: .75rem;
      }

      &::after {
        flex-grow: 1;
      }

      &::before,
      &::after {
        content: "";
        display: block;
        box-sizing: border-box;
        margin-top: .5rem;
        border-top: 1px solid transparent;
        pointer-events: none;
        box-shadow: inset 1px 0 transparent, inset -1px 0 transparent, inset 0 -1px transparent;
        height: .125rem;
      }

    }
  }

  > .form-control,
  > .form-select {
    &:focus {
      border-top: transparent;
      box-shadow: inset 1px 0 $primary, inset -1px 0 $primary, inset 0 -1px $primary;

      &:not(:placeholder-shown) {
        box-shadow: inset 1px 0 $primary, inset -1px 0 $primary, inset 0 -1px $primary;
      }

      & label {
        &::before {
          border-top-color: $input-focus-border-color;
          box-shadow: inset 0 1px $primary;
        }

      }
    }
  }

  & label + input::placeholder,
  & label + textarea::placeholder {
    color: $input-placeholder-color;
  }

  & input:focus,
  & select:focus,
  & textarea:focus {
    //border-color: $input-focus-border-color;
    //border-width: 1px;
    //box-shadow: $input-focus-box-shadow;
    @include label-above-input();

    &::placeholder {
      color: $input-placeholder-color;
    }
  }

  & input:not(:focus):placeholder-shown,
  & textarea:not(:focus):placeholder-shown {
    + label {
      font-size: inherit;
      height: 100%;
      align-items: center;
    }
  }

  & input[placeholder]:not(:placeholder-shown),
  & textarea[placeholder]:not(:placeholder-shown) {
    border-top-color: transparent;
    @include label-above-input();
  }

  & input:not([placeholder]):not([value]),
  & textarea:not([placeholder]):empty {
    @include label-above-input();
  }

  & input:-webkit-autofill,
  & textarea:-webkit-autofill {
    @include label-above-input();
  }

  :is(.card, .card-body) .form-control:focus:not(.border-0) + label,
  :is(.card, .card-body) .floating-label > input:focus + label,
  :is(.card, .card-body) .floating-label > textarea:focus + label,
  :is(.card, .card-body) .floating-label > select:focus + label,
  :is(.card, .card-body) .floating-label > input[placeholder]:not(:placeholder-shown) + label,
  :is(.card, .card-body) .floating-label > textarea[placeholder]:not(:placeholder-shown) + label {
    background-color: var(--#{$prefix}card-bg) !important;
  }
}
